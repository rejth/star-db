1. Render-функция - паттерн React - в компонент в виде prop передается функция, которая рендерит часть компонента (или весь компонент)
такая функция обычно возвращает строку или react-элемент.
Такой паттерн может использоваться для инкапсуляции получения данных для компонента (т.е компонент становится независимым от источника данных). Благодаря этому можно использовать один и тот же компонент для отображения разных данных (например список людей, планет, кораблей). Это один и тот компонент, но благодаря рендер-функции мы можем передавать в него разные данные

2. Error Boundary - паттерн React - использование componentDidCatch() в дочерних компонентах, а не только в родителе, чтобы избежать останова ВСЕГО приложения в случае ошибки в дочернем компоненте

3. Свойства-компоненты - паттерн React - в качестве свойства в компонент можно передавать целые react-компоненты. Так можно создавать компоненты-контейнеры, которые умеют выбирать, что рендерить в зависимости от условия (загрузка, ошибка)

4. Children - это способ передачи свойства в компонент без объявления этого свойства. Мы как бы оборачиваем функцию, объект, строку и т.д в компонент и уже в самом компоненте получаем доступ к передаваемому свойству через this.props.children